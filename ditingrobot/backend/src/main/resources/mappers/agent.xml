<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.diting.dao.AgentMapper">
    <resultMap id="defaultResultMap" type="com.diting.model.Agent">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="owner" property="owner" jdbcType="INTEGER"/>
        <result column="owner_type" property="ownerType" jdbcType="INTEGER"/>
        <result column="deleted" property="deleted" jdbcType="BOOLEAN"/>
        <result column="created_by" property="createdBy" jdbcType="VARCHAR"/>
        <result column="created_time" property="createdTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updatedBy" jdbcType="VARCHAR"/>
        <result column="update_time" property="updatedTime" jdbcType="TIMESTAMP"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="invitation_code" property="invitationCode" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="create" useGeneratedKeys="true" keyProperty="id" parameterType="com.diting.model.Agent">
        INSERT
        INTO agent (
            owner,
            owner_type,
            deleted,
            created_by,
            created_time,
            update_by,
            update_time,
            user_name,
            password,
            mobile,
            invitation_code)
        VALUES (#{owner},
            #{ownerType},
            #{deleted},
            #{createdBy},
            #{createdTime},
            #{updatedBy},
            #{updatedTime},
            #{userName},
            #{password},
            #{mobile},
            #{invitationCode})
    </insert>

    <update id="update" parameterType="com.diting.model.Agent">
        UPDATE
          agent
        SET
          deleted = #{deleted},
          update_by = #{updatedBy},
          update_time = #{updatedTime},
          user_name = #{userName},
          password = #{password},
          mobile = #{mobile},
          invitation_code=#{invitationCode}
        WHERE id = #{id}
    </update>

    <select id="get" resultMap="defaultResultMap" parameterType="java.lang.Integer">
        SELECT
          *
        FROM
          agent
        WHERE id = #{agentId}
        LIMIT 1
    </select>

    <select id="getByUserName" resultMap="defaultResultMap" parameterType="java.lang.String">
        SELECT
        *
        FROM
        agent
        WHERE user_name = #{userName}
        LIMIT 1
    </select>

    <select id="checkUsernameLogin" resultMap="defaultResultMap">
        select
        *
        from agent
        where password = #{password}
        and user_name = #{userName}
        limit 1
    </select>

    <select id="checkMobileExists" resultType="boolean">
        select exists(
        select 1 from agent where mobile = #{mobile}
        )
    </select>

    <select id="checkUsernameExists" resultType="boolean">
        select exists(
        select 1 from agent where user_name = #{userName}
        )
    </select>

    <select id="searchForPage" resultMap="defaultResultMap">
        SELECT *
        FROM agent
        WHERE 1=1
        <if test="keywords != null">
            and mobile = #{keywords} or invitation_code LIKE CONCAT(CONCAT('%', #{keywords}),'%')
        </if>
        ORDER BY id DESC
    </select>

</mapper>