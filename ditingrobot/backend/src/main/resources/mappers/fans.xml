<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.diting.dao.FansMapper">
    <resultMap id="defaultResultMap" type="com.diting.model.Fans">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="own_phone" property="own_phone" jdbcType="VARCHAR"/>
        <result column="oth_phone" property="oth_phone" jdbcType="VARCHAR"/>


    </resultMap>


    <insert id="save_fans" useGeneratedKeys="true" keyProperty="id" parameterType="com.diting.model.Fans">
        INSERT
        INTO fans (
        own_phone,
        oth_phone
        )
        VALUES (
         #{oth_phone},
        #{own_phone}

        )
    </insert>


    <delete id="del_fans" parameterType="com.diting.model.Fans">

            DELETE  FROM fans WHERE own_phone=${oth_phone} AND oth_phone=${own_phone}


    </delete>


    <select id="find_fans" resultMap="defaultResultMap" parameterType="com.diting.model.Fans">

        select * from fans where own_phone= #{oth_phone}
    </select>

    <select id="find_fans_owner" resultMap="defaultResultMap" parameterType="com.diting.model.Fans">

        select * from fans where oth_phone= #{own_phone}
    </select>


    <select id="search_fans" resultMap="defaultResultMap" parameterType="com.diting.model.Fans">
    select  count(1) cc,own_phone,oth_phone,
    (select name from company where id = (
    select company_id from account where id = own_phone)) company_name,
    (select name from robot where company_id = (
    select company_id from account where id = own_phone)) robot_name
    from fans
     group by own_phone order by cc DESC limit 20
    </select>

    <select id="search_fans_top" resultMap="defaultResultMap" parameterType="com.diting.model.Fans">
        select cc , own_phone,company_name,robot_name from (select  count(1) cc,own_phone,(select name from company where id = (select company_id from account where id = own_phone)) company_name,
        (select name from robot where company_id = (select company_id from account where id = own_phone)) robot_name from fans group by own_phone) op
        order by cc desc
    </select>


    <select id="search_count_fans" resultMap="defaultResultMap" parameterType="com.diting.model.Fans">
    	select own_phone,oth_phone,
    (select name from company where id = (
    select company_id from account where id = own_phone)) company_name,
    (select name from robot where company_id = (
    select company_id from account where id = own_phone)) robot_name,
    (select welcomes from robot where company_id = (
    select company_id from account where id = own_phone))  welcome
    from fans where oth_phone = #{own_phone}
    </select>


    <select id="search_fans_count" resultMap="defaultResultMap" parameterType="com.diting.model.Fans">
        select * from fans where oth_phone= #{oth_phone}
    </select>

    <select id="search_my_fans" resultMap="defaultResultMap" parameterType="com.diting.model.Fans">
        select * from fans where own_phone= #{own_phone}
    </select>

    <select id="search_my_fansForPage" resultMap="defaultResultMap" parameterType="com.diting.model.options.FansOptions">
        select * from fans where own_phone= #{own_phone}
    </select>

    <select id="search_fans_flg" resultMap="defaultResultMap" parameterType="com.diting.model.Fans">
        select * from fans where oth_phone= #{own_phone} and own_phone = #{oth_phone}
    </select>



    <select id="search_fans_compy" resultMap="defaultResultMap" parameterType="com.diting.model.Fans">
         select r.name robot_name,r.profile own_phone,c.name company_name from robot r ,company c
         where r.company_id = (
            select company_id from account where id = #{own_phone})
        and
        c.id = (
            select company_id from account where id = #{own_phone})
    </select>

    <select id="find_fans_count" resultType="Integer">
        SELECT count('x') FROM fans where own_phone= #{own_phone}
    </select>

    <select id="searchFansByUserId" resultMap="defaultResultMap" parameterType="java.lang.Integer">
        SELECT * from fans WHERE own_phone=#{ownUserId} AND oth_phone=#{othUserId} limit 1
    </select>

</mapper>
